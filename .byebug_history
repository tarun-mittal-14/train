n
number_of_people > available_seats
n
available_seats = trains[train_no].seats.to_i
n
c
number_of_people > available_seats
available_seats
available_seats = trains[train_no].seats.to_i
 number_of_people > available_seats
available_seats
number_of_people
n
available_seats
available_seats = trains[train_no].seats
n
trains[train_no]
c
new_train
 new_train =  Train.new(@train_no, @name, @source, @destination,  @route,  @seats).create_train(trains)
new_train =  Train.new(@train_no, @name, @source, @destination,  @route,  @seats).create_train(trains)
new_train
Train.new(@train_no, @name, @source, @destination,  @route,  @seats).create_train(trains)
Train.new
new_train
new_train =  Train.new(@train_no, @name, @source, @destination,  @route,  @seats)
Train.new(@train_no, @name, @source, @destination,  @route,  @seats)
c
w
n
create_train(trains)
create_train
trains
n
name
@name
@name = name
n
train_no
@train_no
c
trains
trains[new_train.train_no] = new_train 
trains
new_train
new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
c
trains
new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
new_train =  Train.new(@train_no, @name, @source, @destination,  @route,  @seats).create_train(trains)
new_train =  Train.new(train_no,name, source, destination,  route,  seats).create_train(trains)
c
Train.new(train_no,name, source, destination,  route,  seats).create_train(trains)
Train.new
new_train
Train.new.create_train
Train.new.create_train(trains,  train_no,name, source, destination,  route,  seats)
 new_train = Train.new.create_train(trains,  train_no,name, source, destination,  route,  seats)
c
new_train = Train.new.create_train(trains)
new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats).create_train(trains)
c
new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats).create_train(trains)
n
new_train
 new_train =   new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats).create_train(trains)
c
trains
Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
def initialize(train_no , name , source, destination, route, seats)
    @train_no = train_no
    @name = name
    @source = source
    @destination = destination
    @route = route
    @seats = seats
  end
Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
def initialize(trains)
    @train_no = train_no
    @name = name
    @source = source
    @destination = destination
    @route = route
    @seats = seats
  end
@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats
Train.build(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
Train.creat(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
Train.create(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
name
train_no
trains
new_train = Train.new.create_train(trains)
trains
trains[new_train.train_no] = new_train 
new_train
new_trains
train_no, name, source, destination, route, seats
trains.values
trains.keys
trains
new_train = Train.new(@train_no = train_no,@name = name, @source = source, @destination = destination, @route = route, @seats = seats)
new_train = Train.new
@train_no = train_no
name
train_no
train_no)
new_train = Train.new
new_train = Train.new(train_no, name, source, destination, route, seats)
trains
c
new_train
new_train = Train.new(train_no, name, source, destination, route, seats).create_train
Train.new(train_no, name, source, destination, route, seats).create_train
Train.new(train_no, name, source, destination, route, seats)
Train.new.create_train
c
Train.new(train_no, name, source, destination, route, seats)
c
Train.new(train_no, name, source, destination, route, seats)
c
trains
trains[new_train.train_no] = new_train
trains
new_train
c
cf
w
b
n
train_exists?(trains, source, destination)
n
c
train_exists?(trains, source, destination)
n
c
trains
destination
source
train_exists?(trains, source, destination)
c
trains
Train.create_train
new_train
c
Train.new.create_train
c
new_train 
n
Train.new.create_train
c
Train.create_train
c
Train.create_train
c
Train.create_train
c
trains[new_train.train_no] = new_train if new_train
new_train = Train.new.create_train(trains)
Train.new.create_train(trains)
c
new_train
new_train = Train.new(train_no, name, source, destination, route, seats)
Train.new(train_no, name, source, destination, route, seats)
c
n
return input if yield(input)
if yield(input)
yield(input)
input
n
c
valid_input(msg, error_msg)
error_msg
msg
c
Train.create_train(trains)
c
Train.new.create_train
Train.new.create_train(trains)
trains
c
trains
new_train
new_train = Train.new
Train.new
Train.new(train_no = train_no, name, source, destination, route, seats)
Train.new(train_no, name, source, destination, route, seats)
c
new_train = Train.new.create_train(trains)
trains
n
1
c
destination
source
trains
train_exists?(trains, source, destination)
c
n
train.source == source && train.destination == destination
train.source == source
c
trains
train_exists?(trains, source, destination)
c
n
train_exists?(trains, source, destination)
c
trains[train_no]
trains[train_no].instance_variable_set(:@seats, available_seats - number_of_people)
@seats
trains
number_of_people
 available_seats
c
n
train
value
key 
train.source == source && train.destination == destination
destination
source
train.source == source
trains
key
c
n
c
n
c
value
key
c
value.source
value
key
n
c
n
trains.each do |key, value|
        puts key
        puts value
        puts value.source 
        puts value.destination
        puts source 
        puts destination
      end
value
trains
value.source
n
c
n
trains.each do |key, value| 
